.IFJcode18
CREATEFRAME
PUSHFRAME

###############################################################################
#                            BEGIN LIB FUN INPUTS
###############################################################################
JUMP $inputs$def
LABEL $inputs
CREATEFRAME
PUSHFRAME
DEFVAR LF@$inputs$ret
READ LF@$inputs$ret string
PUSHS LF@$inputs$ret
POPFRAME
RETURN
LABEL $inputs$def
###############################################################################
#                            END LIB FUN INPUTS
###############################################################################
###############################################################################
#                            BEGIN LIB FUN INPUTI
###############################################################################
JUMP $inputi$def
LABEL $inputi
CREATEFRAME
PUSHFRAME
DEFVAR LF@$inputi$ret
READ LF@$inputi$ret int
PUSHS LF@$inputi$ret
POPFRAME
RETURN
LABEL $inputi$def
###############################################################################
#                            END LIB FUN INPUTI
###############################################################################
###############################################################################
#                            BEGIN LIB FUN INPUTF
###############################################################################
JUMP $inputf$def
LABEL $inputf
CREATEFRAME
PUSHFRAME
DEFVAR LF@$inputf$ret
READ LF@$inputf$ret int
PUSHS LF@$inputf$ret
POPFRAME
RETURN
LABEL $inputf$def
###############################################################################
#                            END LIB FUN INPUTF
###############################################################################
###############################################################################
#                            BEGIN LIB FUN LENGTH
###############################################################################
JUMP $length$def
LABEL $length
CREATEFRAME
PUSHFRAME
DEFVAR LF@s
DEFVAR LF@$length$ret
POPS LF@s
STRLEN LF@$length$ret LF@s
PUSHS LF@$length$ret
POPFRAME
RETURN
LABEL $length$def
###############################################################################
#                            END LIB FUN LENGTH
###############################################################################
###############################################################################
#                            BEGIN LIB FUN SUBSTR
###############################################################################
JUMP $substr$def
LABEL $substr
CREATEFRAME
PUSHFRAME
DEFVAR LF@s
DEFVAR LF@i
DEFVAR LF@n
DEFVAR LF@underflow
DEFVAR LF@overflow
DEFVAR LF@wrongN
DEFVAR LF@len
DEFVAR LF@err
DEFVAR LF@$substr$ret
DEFVAR LF@cnt
DEFVAR LF@tmp
DEFVAR LF@limit
POPS LF@n
POPS LF@i
POPS LF@s
STRLEN LF@len LF@s
LT LF@underflow LF@i int@0
GT LF@overflow LF@i LF@len
LT LF@wrongN LF@n int@0
OR LF@err LF@underflow LF@overflow
OR LF@err LF@err LF@wrongN
JUMPIFNEQ $substr$no_error LF@err bool@true
PUSHS nil@nil
RETURN
LABEL $substr$no_error
GT LF@limit LF@n LF@len
JUMPIFEQ $substr$limit_if LF@limit bool@false
SUB LF@n LF@len LF@i
LABEL $substr$limit_if
MOVE LF@cnt int@0
MOVE LF@$substr$ret string@
LABEL $substr$forloop
JUMPIFEQ $substr$hardjmp LF@cnt LF@n
GETCHAR LF@tmp LF@s LF@i
CONCAT LF@$substr$ret LF@$substr$ret LF@tmp
ADD LF@cnt LF@cnt int@1
ADD LF@i LF@i int@1
JUMP $substr$forloop
LABEL $substr$hardjmp
PUSHS LF@$substr$ret
POPFRAME
RETURN
LABEL $substr$def
###############################################################################
#                            END LIB FUN SUBSTR
###############################################################################
###############################################################################
#                            BEGIN LIB FUN ORD 
###############################################################################
JUMP $ord$def
LABEL $ord
CREATEFRAME
PUSHFRAME
DEFVAR LF@s
DEFVAR LF@i
DEFVAR LF@$ord$ret
DEFVAR LF@err
DEFVAR LF@underflow
DEFVAR LF@overflow
DEFVAR LF@len
POPS LF@i
POPS LF@s
STRLEN LF@len LF@s
SUB LF@len LF@len int@1
LT LF@underflow LF@i int@0
GT LF@overflow LF@i LF@len
OR LF@err LF@underflow LF@overflow
JUMPIFNEQ $ord$no_error LF@err bool@true
PUSHS nil@nil
RETURN
LABEL $ord$no_error
STRI2INT LF@$ord$ret LF@s LF@i
PUSHS LF@$ord$ret
POPFRAME
RETURN
LABEL $ord$def
###############################################################################
#                            END LIB FUN ORD
###############################################################################
###############################################################################
#                            BEGIN LIB FUN CHR 
###############################################################################
JUMP $chr$def
LABEL $chr
CREATEFRAME
PUSHFRAME
DEFVAR LF@i
DEFVAR LF@$chr$ret
DEFVAR LF@err
DEFVAR LF@underflow
DEFVAR LF@overflow
POPS LF@i
LT LF@underflow LF@i int@0
GT LF@overflow LF@i int@255 
OR LF@err LF@underflow LF@overflow
JUMPIFNEQ $chr$no_error LF@err bool@true
EXIT int@48
LABEL $chr$no_error
INT2CHAR LF@$chr$ret LF@i
PUSHS LF@$chr$ret
POPFRAME
RETURN
LABEL $chr$def
###############################################################################
#                            END LIB FUN CHR
###############################################################################
###############################################################################
#                            BEGIN LIB FUN PRINT 
###############################################################################
JUMP $print$def
LABEL $print
CREATEFRAME
PUSHFRAME
DEFVAR LF@cnt
DEFVAR LF@s
DEFVAR LF@i
DEFVAR LF@out
POPS LF@cnt
MOVE LF@i int@0
MOVE LF@out string@
LABEL $print$forloop
JUMPIFEQ $print$hardjmp LF@i LF@cnt
POPS LF@s
WRITE LF@s
ADD LF@i LF@i int@1
JUMP $print$forloop
LABEL $print$hardjmp
PUSHS nil@nil
POPFRAME
RETURN
LABEL $print$def
###############################################################################
#                            END LIB FUN PRINT
###############################################################################


PUSHS string@first
PUSHS string@second
PUSHS string@third
PUSHS int@58
PUSHS float@0x1.1p+4
PUSHS int@4
CALL $print
DEFVAR LF@a
POPS LF@a
WRITE LF@a

POPFRAME
